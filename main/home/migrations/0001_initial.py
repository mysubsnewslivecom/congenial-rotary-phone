# Generated by Django 4.1.4 on 2022-12-25 20:28

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionList',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Created Timestamp', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated Timestamp', verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, help_text='is active', verbose_name='Is active')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('action', models.CharField(max_length=250, verbose_name='Action list')),
            ],
            options={
                'ordering': ['-name'],
                'unique_together': {('name', 'action')},
            },
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Created Timestamp', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated Timestamp', verbose_name='Updated at')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('ERROR', 'ERROR'), ('SUCCESS', 'SUCCESS'), ('IN_PROGRESS', 'IN-PROGRESS'), ('CREATED', 'CREATED'), ('COMPLETED', 'COMPLETED'), ('SKIPPED', 'SKIPPED'), ('INFO', 'INFO'), ('DEBUG', 'DEBUG')], max_length=15, verbose_name='Status')),
                ('message', models.CharField(help_text='message', max_length=1000, verbose_name='Message')),
                ('task_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Task Id')),
                ('celery_task_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Celery Task Id')),
            ],
            options={
                'verbose_name_plural': 'Audit',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Created Timestamp', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated Timestamp', verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, help_text='is active', verbose_name='Is active')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(help_text='Category', max_length=250, verbose_name='Category')),
                ('sub_category', models.CharField(help_text='Category', max_length=250, verbose_name='Category')),
            ],
            options={
                'ordering': ['-id'],
                'unique_together': {('category', 'sub_category')},
            },
        ),
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Created Timestamp', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated Timestamp', verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, help_text='is active', verbose_name='Is active')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(default='PENDING', max_length=50, verbose_name='status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('action_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='actions', to='home.actionlist', verbose_name='Action id')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('profile_picture', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='')),
                ('bio', models.TextField(blank=True)),
                ('headline', models.CharField(max_length=300)),
                ('following', models.IntegerField(default=0)),
                ('followers', models.IntegerField(default=0)),
                ('friends', models.IntegerField(default=0)),
                ('articles', models.IntegerField(default=0)),
                ('date_of_birth', models.DateField(default='1990-01-01')),
                ('is_admin', models.BooleanField(default=False)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now, help_text='Updated Timestamp', verbose_name='Blog updated on')),
                ('address', models.CharField(max_length=300, null=True)),
                ('address_2', models.CharField(max_length=300, null=True)),
                ('city', models.CharField(max_length=300, null=True)),
                ('state', models.CharField(max_length=300, null=True)),
                ('country', models.CharField(max_length=300, null=True)),
                ('zip', models.CharField(max_length=300, null=True)),
                ('skills', models.JSONField(default=dict, verbose_name='Skills')),
                ('notes', models.TextField(verbose_name='Notes')),
                ('education', models.JSONField(default=dict, verbose_name='Education')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
